// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component Button Group component Should align to the right 1`] = `
<div
  className="buttons is-right"
>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 0
  </button>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 1
  </button>
</div>
`;

exports[`Button component Button Group component Should be a default list of buttons 1`] = `
<div
  className="buttons"
>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 0
  </button>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 1
  </button>
</div>
`;

exports[`Button component Button Group component Should be centered 1`] = `
<div
  className="buttons is-centered"
>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 0
  </button>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 1
  </button>
</div>
`;

exports[`Button component Button Group component Should concat class names in props with Bulma class name 1`] = `
<div
  className="buttons super-class-1 dope-class-2"
>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 0
  </button>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 1
  </button>
</div>
`;

exports[`Button component Button Group component Should group buttons together 1`] = `
<div
  className="buttons has-addons"
>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 1
  </button>
  <button
    className="button"
    disabled={false}
    onClick={[Function]}
    style={Object {}}
    tabIndex={0}
  >
    test 2
  </button>
</div>
`;

exports[`Button component Should be a Large Primary Button 1`] = `
<button
  className="is-primary is-large button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
/>
`;

exports[`Button component Should be a Primary Button 1`] = `
<button
  className="is-primary button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
/>
`;

exports[`Button component Should be a default Button 1`] = `
<button
  className="button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
/>
`;

exports[`Button component Should be a reset form button 1`] = `
<button
  className="button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
  type="reset"
/>
`;

exports[`Button component Should be a submit form button 1`] = `
<button
  className="button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
  type="submit"
/>
`;

exports[`Button component Should be an anchor button 1`] = `
<a
  className="button"
  disabled={false}
  href="https://github.com/couds/react-bulma-components"
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
/>
`;

exports[`Button component Should exist 1`] = `
Object {
  "$$typeof": Symbol(react.forward_ref),
  "Group": [Function],
  "defaultProps": Object {
    "backgroundColor": undefined,
    "children": null,
    "className": "",
    "clearfix": undefined,
    "clipped": undefined,
    "color": null,
    "disabled": false,
    "fullwidth": false,
    "hidden": undefined,
    "inverted": false,
    "invisible": undefined,
    "isSelected": false,
    "isStatic": false,
    "italic": undefined,
    "loading": false,
    "marginless": undefined,
    "onClick": [Function],
    "outlined": false,
    "overlay": undefined,
    "paddingless": undefined,
    "pull": undefined,
    "radiusless": undefined,
    "remove": false,
    "renderAs": "button",
    "reset": false,
    "responsive": undefined,
    "rounded": false,
    "shadowless": undefined,
    "size": null,
    "state": null,
    "style": Object {},
    "submit": false,
    "text": false,
    "textAlignment": undefined,
    "textColor": undefined,
    "textSize": undefined,
    "textTransform": undefined,
    "textWeight": undefined,
    "unselectable": undefined,
  },
  "propTypes": Object {
    "backgroundColor": [Function],
    "children": [Function],
    "className": [Function],
    "clearfix": [Function],
    "clipped": [Function],
    "color": [Function],
    "disabled": [Function],
    "fullwidth": [Function],
    "hidden": [Function],
    "inverted": [Function],
    "invisible": [Function],
    "isSelected": [Function],
    "isStatic": [Function],
    "italic": [Function],
    "loading": [Function],
    "marginless": [Function],
    "onClick": [Function],
    "outlined": [Function],
    "overlay": [Function],
    "paddingless": [Function],
    "pull": [Function],
    "radiusless": [Function],
    "remove": [Function],
    "renderAs": [Function],
    "reset": [Function],
    "responsive": [Function],
    "rounded": [Function],
    "shadowless": [Function],
    "size": [Function],
    "state": [Function],
    "style": [Function],
    "submit": [Function],
    "text": [Function],
    "textAlignment": [Function],
    "textColor": [Function],
    "textSize": [Function],
    "textTransform": [Function],
    "textWeight": [Function],
    "unselectable": [Function],
  },
  "render": [Function],
}
`;

exports[`Button component Should expose Button Group 1`] = `[Function]`;

exports[`Button component Should render as a React element link with to prop 1`] = `
<a
  href="http://google.com"
>
  TEST
</a>
`;

exports[`Button component Should render as a html button 1`] = `
<button
  className="is-danger button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
/>
`;

exports[`Button component Should render as a static Button 1`] = `
<span
  className="is-primary is-static button"
  disabled={false}
  onClick={[Function]}
  style={Object {}}
  tabIndex={0}
/>
`;

exports[`Button component Should render be disabled 1`] = `
<button
  className="button"
  disabled={true}
  style={Object {}}
  tabIndex={-1}
/>
`;
